# Default values for saleor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

saleor:
  image:
    repository: smoloney/saleor
    tag: "master-b46f30"
    pullPolicy: IfNotPresent
    # pullSecret:

  # If using the standard saleor-secrets file, then leave this empty
  # The value of 'existingSecret' is the name of the alternative secrets file to use
  existingSecret:

  service:
    type: LoadBalancer
    port: 80

  ingress:
    enabled: false
    annotations: {}
    path: /
    hosts:
      - saleor.local
    tls: []
#        - secretName: saleor-private-key
#          hosts:
#            - saleor.local

  # Enable persistence if serving images from a volume
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi
    volumeMode: Filesystem
    persistentVolumeReclaimPolicy: Delete
    # Uncomment storageClass: "" to disable dynamic provisioning
    # storageClass: ""
    # To use an existingPvc rather than have it provisioned by this chart, uncomment and enter below
    # existingPvc:

  jobs:
    init:
      migrations:
        enabled: true
        activeDeadlineSeconds:
        backOffLimit:
        ttlSecondsAfterFinished:
        weight: 1
      prePopulateDemo:
        enabled: true
        activeDeadlineSeconds:
        backOffLimit:
        ttlSecondsAfterFinished:
        weight: 2
      createUsers:
        enabled: true
        activeDeadlineSeconds:
        backOffLimit:
        ttlSecondsAfterFinished:
        weight: 3
        users:
          - email: saleor-user-1@saleor.local
            # A password should be supplied through a kubernetes secret and this value left empty, See `secrets.yaml`
            password: unsafe_password
            isStaff: false
            isSuperuser: false
          - email: saleor-user-2@example.com
            # A password should be supplied through a kubernetes secret and this value left empty, See `secrets.yaml`
            password: unsafe_password
            isStaff: true
            isSuperuser: false
          - email: saleor-superuser-1@saleor.local
            # A password should be supplied through a kubernetes secret and this value left empty, See `secrets.yaml`
            password: unsafe_password
            isStaff: true
            isSuperuser: true
      currencyUpdates:
        enabled: true
        activeDeadlineSeconds:
        backOffLimit:
        ttlSecondsAfterFinished:
        weight: 4
      vatUpdates:
        enabled: true
        activeDeadlineSeconds:
        backOffLimit:
        ttlSecondsAfterFinished:
        weight: 5
      nginx:
        activeDeadlineSeconds:
        backOffLimit:
        ttlSecondsAfterFinished:
        weight: 6
    cron:
      currencyUpdates:
        enabled: true
        cron: "0 6 * * *"
      vatUpdates:
        enabled: true
        cron: "0 7 * * *"

  # Setting for the django-deployment
  django:
    # One can optionally set an alternative config map for the settings.py file, eg
    alternativeSettingsConfigMap:
    alternativeUwsgiConfigMap:
    debugMode: false
    settingsModule: saleor.custom-settings
    uwsgi:
      processes: 2
      disableLogging: false
      enableThreads: false
      harakiri: 0
      port: 8000
      logFormat: UWSGI uwsgi "%(method) %(uri) %(proto) %(addr)" %(status) %(size) %(msecs)ms [PID:%(pid):Worker-%(wid)] [RSS:%(rssM)MB]
  #    logFormat: UWSGI uwsgi "%(method) %(uri) %(proto) %(addr) %(var.HTTP_X_FORWARDED_FOR) %(var.HTTP_X_FORWARDED_FOR) %(uagent)" %(status) %(size) %(msecs)ms [PID:%(pid):Worker-%(wid)] [RSS:%(rssM)MB]
      logXForwardedFor: true
      logMaxSize: 1024
      muteHealthCheckLogs: true
      maxRequests: 100
      numberOfThreads: 2
      maxWorkerLifeTime:
      vacuum:
    replicaCount: 1
    autoscaling:
      enabled: true
      minReplicaCount: 1
      maxReplicaCount: 8
      targetCPUUtilizationPercentage: 80
    internalIps:
      - 127.0.0.1
    timezone: Etc/UTC
    languageCode: en
    internationalization: true
    localization: true
    ssl:
      enabled: false
    staticUrl: /static/
    mediaUrl: /media/
    enableSilk: false
    defaultCountry: IE
    defaultCurrency: EUR
    availableCurrencies:
      - AUD
      - CAD
      - CHE
      - CHN
      - EUR
      - GBP
      - HKD
      - JPN
      - SGP
      - USD
    loginRedirectUrl: home
    googleAnalyticsTrackingId:
    lowStockThreshold: 10
    maxCartLineQuantity: 50
    paginateBy: 16
    dashboardPaginateBy: 30
    dashboardSearchLimit: 5
    allowedHosts:
      includeIngressHosts: true
      hosts:
        - localhost
        - 127.0.0.1
    admins: []
#      - name: saleor-admin
#        email: saleor.local

    # Log levels
    levels:
      saleorLogs: DEBUG
      djangoServerLogs: INFO
      djangoLogs: INFO
      rootLogs: INFO
      consoleHandler: DEBUG
      mailAdminsHandler: ERROR

    images:
      placeholders:
        size_60: images/placeholder60x60.png
        size_120: images/placeholder120x120.png
        size_255: images/placeholder255x255.png
        size_540: images/placeholder540x540.png
        size_1080: images/placeholder1080x1080.png
      # Note createOnDemand will only be meaningful if .Values.saleor.nginx.serveMedia: false
      # otherwise if nginx is serving media content, it is pre-generated
      createOnDemand: false

    logoutOnPasswordChange: false

    # See https://developers.google.com/recaptcha/docs/versions
    recaptcha:
      publicKey:

    # Aws

    # Django docs:
    # Further mirumee docs - https://github.com/mirumee/saleor/blob/master/docs/deployment/s3.rst
    # django-storages docs - https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html

    # Aws docs:
    # Further info on location https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
    # Further info on buckets https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#create-bucket-intro
    # By setting a staticBucketName, static files will be served from aws s3 (eg js, css)
    # By setting a mediaBucketName, media files will be served from aws s3 (eg product images)
    # Aws docs on custom domains: https://docs.aws.amazon.com/AmazonS3/latest/dev/website-hosting-custom-domain-walkthrough.html
    # Aws docs on queryStringAuth https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html
    # TODO - implement aws optionally for /static and/or /media
    aws:
      # keyId and keySecret should be set in the secrets file and left empty in `values.yaml` for security reasons
      keyId:
      keySecret:
      location: eu-west-1
      queryStringAuth: false
      static:
        enabled: false
        bucketName:
        customDomain:
      media:
        enabled: false
        bucketName:
        customDomain:

    # smtpSettings
    # The password should be set in the secrets file under email-password
    # See https://github.com/mirumee/saleor/blob/master/docs/guides/email_integration.rst
    email:
      defaultFromEmail: saleor@saleor.local
      # if orderFromEmail is unset, will default to defaultFromEmail
      orderFromEmail:
      smtpSettings:
        # generic should work for a smtp servers like gmail, ovh, mailgun and generic smtp servers
        # format: smtp://[loginName]@[customDomainName]:[password]@[providerDomainName]:[port]/[extraArgs]
        # Password should be set in the secrets file under email-password
        password:
        generic:
          enabled: false
          loginName:
          customDomainName:
          providerDomainName:
          port: 465
          extraArgs: "?ssl=True"
        mailjet:
          enabled: false
          username:
        amazonSES:
          enabled: false
          username:
          region: eu-west-1

    # openExchangesApiKey, recapthcaPrivateKey, secretKey, vatLayerAccessKey
    # should all be set in the secrets file and left empty in `values.yaml` for security reasons
    openExchangesApiKey:
    recapthcaPrivateKey:
    secretKey:
    vatLayerAccessKey:

    externalServices:
      # Note to have effect, .Values.redis.enabled must be false
      redis:
        # password should be set as ext-redis-password in the secrets file and left empty in `values.yaml` for security reasons
        password:
        host:
        # tls true => use rediss in url instead of redis
        tls: true
        port: 6379
        dbNumber: 0
        celeryBrokerDbNumber: 1
      postgresql:
        # password should be set as ext-postgresql-password in the secrets file and left empty in `values.yaml` for security reasons
        password:
        user:
        host:
        port: 5432
        database: saleor
        requireSSL: true
      elasticsearch:
        enabled: false
        # password should be set as ext-elasticsearch-password in the secrets file and left empty in `values.yaml` for security reasons
        password:
        user:
        host:
        port: 9200
        tls: true
      sentry:
        enabled: false
        # The dsn should be set in the secrets file rather than in `values.yaml`
        dsn:

    tokens:
      jwt:
        expires: true
    livenessProbeSettings:
      initialDelaySeconds: 60
      periodSeconds: 15
      failureThreshold: 5
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbeSettings:
      initialDelaySeconds: 30
      periodSeconds: 5
      failureThreshold: 5
      successThreshold: 1
      timeoutSeconds: 1

    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi

    nodeSelector: {}
    tolerations: []
    affinity: {}

  # Setting for the celery-deployment
  celery:
    replicaCount: 1
    autoscaling:
      enabled: true
      minReplicaCount: 1
      maxReplicaCount: 6
      targetCPUUtilizationPercentage: 80
    # choose between fixed or auto
    concurrencyType: auto
    fixedConcurrency: 4
    minConcurrency: 2
    maxConcurrency: 6
    heartBeatIntervalSeconds: 10
    # softTimeLimitSeconds: 300
    # hardTimeLimitSeconds: 600
    # Logging level, choose between DEBUG, INFO, WARNING, ERROR, CRITICAL, or FATAL.
    logLevel: INFO
    taskEventsMonitoringEnabled: true
    livenessProbeSettings:
      initialDelaySeconds: 60
      periodSeconds: 30
      failureThreshold: 3
      successThreshold: 1
      timeoutSeconds: 12
    readinessProbeSettings:
      initialDelaySeconds: 60
      periodSeconds: 15
      failureThreshold: 3
      successThreshold: 1
      timeoutSeconds: 12
    resources:
      requests:
        cpu: 500m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    nodeSelector: {}
    tolerations: []
    affinity: {}

  # Setting for the nginx-deployment
  nginx:
    replicaCount: 1
    autoscaling:
      enabled: true
      minReplicaCount: 1
      maxReplicaCount: 2
      targetCPUUtilizationPercentage: 80
    serveMedia:
      enabled: true
    serveStatic:
      enabled: true
    image:
      # Note, the way the nginx deployment currently setup up is to be only compatible with nginxinc/nginx-unprivileged
      repository: "nginxinc/nginx-unprivileged"
      tag: "1.15.5-alpine"
      pullPolicy: IfNotPresent
      # pullSecret:
    containerPort: 8080
    livenessProbeSettings:
      initialDelaySeconds: 60
      periodSeconds: 15
      failureThreshold: 5
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbeSettings:
      initialDelaySeconds: 15
      periodSeconds: 5
      failureThreshold: 5
      successThreshold: 1
      timeoutSeconds: 1
    config:
      workerProcesses: 2
      workerConnections: 1024
      accessLogs:
        enabled: true
        muteHealthChecks: true
      errorLogs:
        enabled: true
        level: warn
      logFormat: $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent";
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    nodeSelector: {}
    tolerations: []
    affinity: {}

### Overrides charts/postgresql/values.yaml
### Corresponds to helm/charts/stable/postgresql chart.yaml v3.0.0
### Refer to https://github.com/helm/charts/blob/master/stable/postgresql/values.yaml
postgresql:
  enabled: true

  ## Global Docker image registry
  ### Please, note that this will override the image registry for all the images, including dependencies, configured to use the global value
  ###
  ## global:
  ##   imageRegistry:

  ## Bitnami PostgreSQL image version
  ## ref: https://hub.docker.com/r/bitnami/postgresql/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 10.6.0
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent

    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistrKeySecretName

    ## Set to true if you would like to see extra information on logs
    ## It turns BASH and NAMI debugging in minideb
    ## ref:  https://github.com/bitnami/minideb-extras/#turn-on-bash-debugging
    debug: false

  ##
  ## Init containers parameters:
  ## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
  ##
  volumePermissions:
    image:
      registry: docker.io
      repository: bitnami/minideb
      tag: latest
      pullPolicy: Always
    securityContext:
      runAsUser: 0

  ## Pod Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001

  replication:
    enabled: false
    user: repl_user
    password: repl_password
    slaveReplicas: 1

  ## PostgreSQL admin user
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#setting-the-root-password-on-first-run
  postgresqlUsername: postgres

  ## PostgreSQL password
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#setting-the-root-password-on-first-run
  ##
  # postgresqlPassword:

  ## Create a database
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#creating-a-database-on-first-run
  ##
  postgresqlDatabase: saleor

  ## PostgreSQL configuration
  ## Specify runtime configuration parameters as a dict, using camelCase, e.g.
  ## {"sharedBuffers": "500MB"}
  ## Alternatively, you can put your postgresql.conf under the files/ directory
  ## ref: https://www.postgresql.org/docs/current/static/runtime-config.html
  ##
  # postgresqlConfiguration:

  ## PostgreSQL client authentication configuration
  ## Specify content for pg_hba.conf
  ## Default: do not create pg_hba.conf
  ## Alternatively, you can put your pg_hba.conf under the files/ directory
  # pgHbaConfiguration: |-
  #   local all all trust
  #   host all all localhost trust
  #   host mydatabase mysuser 192.168.0.0/24 md5

  ## initdb scripts
  ## Specify dictionnary of scripts to be run at first boot
  ## Alternatively, you can put your scripts under the files/docker-entrypoint-initdb.d directory
  ##
  # initdbScripts:
  #   my_init_script.sh:|
  #      #!/bin/sh
  #      echo "Do something."

  ## Optional duration in seconds the pod needs to terminate gracefully.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: 30

  ## PostgreSQL service configuration
  service:
    ## PosgresSQL service type
    type: ClusterIP
    port: 5432

    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:

    ## Provide any additional annotations which may be required. This can be used to
    annotations: {}
    ## Set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    # loadBalancerIP:

  ## PostgreSQL data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  persistence:
    enabled: false
    ## A manually managed Persistent Volume and Claim
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:
    mountPath: /bitnami/postgresql
    # storageClass: "-"
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    annotations: {}

  ## updateStrategy for PostgreSQL StatefulSet and its slaves StatefulSets
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  updateStrategy:
    type: RollingUpdate

  ##
  ## PostgreSQL Master parameters
  ##
  master:
    ## Node, affinity and tolerations labels for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
    nodeSelector: {}
    affinity: {}
    tolerations: []

  ##
  ## PostgreSQL Slave parameters
  ##
  slave:
    ## Node, affinity and tolerations labels for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
    nodeSelector: {}
    affinity: {}
    tolerations: []

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 2000m
      memory: 2Gi

  networkPolicy:
    ## Enable creation of NetworkPolicy resources.
    ##
    enabled: false

    ## The Policy model to apply. When set to false, only pods with the correct
    ## client label will have network access to the port PostgreSQL is listening
    ## on. When true, PostgreSQL will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: true

  ## Configure extra options for liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  ## Configure metrics exporter
  ##
  metrics:
    enabled: false
    # resources: {}
    service:
      type: ClusterIP
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
      loadBalancerIP:
    image:
      registry: docker.io
      repository: wrouesnel/postgres_exporter
      tag: v0.4.6
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      # pullSecrets:
      #   - myRegistrKeySecretName

    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
    ## Configure extra options for liveness and readiness probes
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1

    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1

  # Define custom environment variables to pass to the image here
  extraEnv: {}


### Overrides charts/elasticsearch/values.yaml
### Corresponds to helm/charts/stable/elasticsearch chart.yaml v1.11.1
### Refer to https://github.com/helm/charts/blob/master/stable/elasticsearch/values.yaml
elasticsearch:
  enabled: false

  # Default values for elasticsearch.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  appVersion: "6.4.2"

  image:
    repository: "docker.elastic.co/elasticsearch/elasticsearch-oss"
    tag: "6.4.2"
    pullPolicy: "IfNotPresent"
    # If specified, use these secrets to access the image
    # pullSecrets:
    #   - registry-secret

  initImage:
    repository: "busybox"
    tag: "latest"
    pullPolicy: "Always"

  cluster:
    name: "elasticsearch"
    # If you want X-Pack installed, switch to an image that includes it, enable this option and toggle the features you want
    # enabled in the environment variables outlined in the README
    xpackEnable: false
    # Some settings must be placed in a keystore, so they need to be mounted in from a secret.
    # Use this setting to specify the name of the secret
    # keystoreSecret: eskeystore
    config: {}
    # Custom parameters, as string, to be added to ES_JAVA_OPTS environment variable
    additionalJavaOpts: ""
    env:
      # IMPORTANT: https://www.elastic.co/guide/en/elasticsearch/reference/current/important-settings.html#minimum_master_nodes
      # To prevent data loss, it is vital to configure the discovery.zen.minimum_master_nodes setting so that each master-eligible
      # node knows the minimum number of master-eligible nodes that must be visible in order to form a cluster.
      MINIMUM_MASTER_NODES: "2"

  client:
    name: client
    replicas: 1
    serviceType: ClusterIP
    loadBalancerIP: {}
    loadBalancerSourceRanges: {}
  ## (dict) If specified, apply these annotations to the client service
  #  serviceAnnotations:
  #    example: client-svc-foo
    heapSize: "512m"
    antiAffinity: "soft"
    nodeAffinity: {}
    nodeSelector: {}
    tolerations: []
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    priorityClassName: ""
    ## (dict) If specified, apply these annotations to each client Pod
    # podAnnotations:
    #   example: client-foo
    podDisruptionBudget:
      enabled: false
      minAvailable: 1
      # maxUnavailable: 1

  master:
    name: master
    exposeHttp: true
    replicas: 3
    heapSize: "512m"
    persistence:
      enabled: false
      accessMode: ReadWriteOnce
      name: data
      size: "4Gi"
      # storageClass: "ssd"
    antiAffinity: "soft"
    nodeAffinity: {}
    nodeSelector: {}
    tolerations: []
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    priorityClassName: ""
    ## (dict) If specified, apply these annotations to each master Pod
    # podAnnotations:
    #   example: master-foo
    podDisruptionBudget:
      enabled: false
      minAvailable: 2  # Same as `cluster.env.MINIMUM_MASTER_NODES`
      # maxUnavailable: 1
    updateStrategy:
      type: OnDelete

  data:
    name: data
    exposeHttp: true
    replicas: 1
    heapSize: "1536m"
    persistence:
      enabled: false
      accessMode: ReadWriteOnce
      name: data
      size: "30Gi"
      # storageClass: "ssd"
    terminationGracePeriodSeconds: 3600
    antiAffinity: "soft"
    nodeAffinity: {}
    nodeSelector: {}
    tolerations: []
    resources:
      requests:
        cpu: 200m
        memory: 1664Mi
      limits:
        cpu: 1000m
        memory: 2048Mi
    priorityClassName: ""
    ## (dict) If specified, apply these annotations to each data Pod
    # podAnnotations:
    #   example: data-foo
    podDisruptionBudget:
      enabled: false
      # minAvailable: 1
      maxUnavailable: 1
    updateStrategy:
      type: OnDelete

  ## Additional init containers
  extraInitContainers: |

### Overrides charts/redis/values.yaml
### Corresponds to helm/charts/stable/redis chart.yaml v4.2.1
### Refer to https://github.com/helm/charts/blob/master/stable/redis/values.yaml
redis:
  enabled: true

  ## Global Docker image registry
  ## Please, note that this will override the image registry for all the images, including dependencies, configured to use the global value
  ##
  # global:
  #   imageRegistry:

  ## Bitnami Redis image version
  ## ref: https://hub.docker.com/r/bitnami/redis/tags/
  ##
  image:
    registry: docker.io
    repository: bitnami/redis
    ## Bitnami Redis image tag
    ## ref: https://github.com/bitnami/bitnami-docker-redis#supported-tags-and-respective-dockerfile-links
    ##
    tag: 4.0.11
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: Always
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistrKeySecretName

  ## Cluster settings
  cluster:
    enabled: true
    slaveCount: 3

  networkPolicy:
    ## Specifies whether a NetworkPolicy should be created
    ##
    enabled: false

    ## The Policy model to apply. When set to false, only pods with the correct
    ## client label will have network access to the port Redis is listening
    ## on. When true, Redis will accept connections from any source
    ## (with the correct destination port).
    ##
    # allowExternal: true

  serviceAccount:
    ## Specifies whether a ServiceAccount should be created
    ##
    create: false
    # The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

  rbac:
    ## Specifies whether RBAC resources should be created
    ##
    create: false

    role:
      ## Rules to create. It follows the role specification
      # rules:
      #  - apiGroups:
      #    - extensions
      #    resources:
      #      - podsecuritypolicies
      #    verbs:
      #      - use
      #    resourceNames:
      #      - gce.unprivileged
      rules: []

  ## Use password authentication
  usePassword: false
  ## Redis password (both master and slave)
  ## Defaults to a random 10-character alphanumeric string if not set and usePassword is true
  ## ref: https://github.com/bitnami/bitnami-docker-redis#setting-the-server-password-on-first-run
  ##
  password:
  ## Use existing secret (ignores previous password)
  # Change to a .Values.existing secret if using something other than 'saleor-secrets-namespace`
  existingSecret:

  ## Persist data to a persistent volume
  persistence: {}
    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

  ##
  ## Redis Master parameters
  ##
  master:
    ## Redis port
    port: 6379
    ## Redis command arguments
    ##
    ## Can be used to specify command line arguments, for example:
    ##
    ## args:
    ##  - "redis-server"
    ##  - "--maxmemory-policy volatile-ttl"
    args: []
    ## Redis additional command line flags
    ##
    ## Can be used to specify command line flags, for example:
    ##
    ## redisExtraFlags:
    ##  - "--maxmemory-policy volatile-ttl"
    ##  - "--repl-backlog-size 1024mb"
    extraFlags: []
    ## Comma-separated list of Redis commands to disable
    ##
    ## Can be used to disable Redis commands for security reasons.
    ## ref: https://github.com/bitnami/bitnami-docker-redis#disabling-redis-commands
    ##
    disableCommands: "FLUSHDB,FLUSHALL"

    ## Redis Master additional pod labels and annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    podLabels: {}
    podAnnotations: {}

    ## Redis Master resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    ## Use an alternate scheduler, e.g. "stork".
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    # schedulerName:

    ## Configure extra options for Redis Master liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 5

    ## Redis Master Node selectors and tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
    ##
    # nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
    # tolerations: []
    ## Redis Master pod/node affinity/anti-affinity
    ##
    affinity: {}

    ## Redis Master Service properties
    service:
      ##  Redis Master Service type
      type: ClusterIP
      port: 6379

      ## Specify the nodePort value for the LoadBalancer and NodePort service types.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      # nodePort:

      ## Provide any additional annotations which may be required. This can be used to
      ## set the LoadBalancer service type to internal only.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      annotations: {}
      loadBalancerIP:

    ## Redis Master Pod Security Context
    ##
    securityContext:
      enabled: true
      fsGroup: 1001
      runAsUser: 1001

    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      enabled: false
      ## The path the volume will be mounted at, useful when using different
      ## Redis images.
      path: /bitnami/redis/data
      ## The subdirectory of the volume to mount to, useful in dev environments
      ## and one PV for multiple services.
      subPath: ""
      ## redis data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessModes:
      - ReadWriteOnce
      size: 8Gi

    ## Update strategy, can be set to RollingUpdate or onDelete by default.
    ## https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#updating-statefulsets
    statefulset:
      updateStrategy: RollingUpdate
      ## Partition update strategy
      ## https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#partitions
      # rollingUpdatePartition:


  ##
  ## Redis Slave properties
  ## Note: serviceType and service are mandatory parameters
  ## The rest of the parameters, if undefined, will inherit those declared in Redis Master
  ##
  slave:
    ## Slave Service properties
    service:
      ##  Redis Slave Service type
      type: ClusterIP
      ## Specify the nodePort value for the LoadBalancer and NodePort service types.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      # nodePort:

      ## Provide any additional annotations which may be required. This can be used to
      ## set the LoadBalancer service type to internal only.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
      ##
      annotations: {}
      loadBalancerIP:

    ## Redis port
    # port: 6379
    ## Redis command arguments
    # args: []
    ## Redis extra flags
    # extraFlags: []
    ## Comma-separated list of Redis commands to disable
    # disableCommands: ""

    ## Redis Slave pod/node affinity/anti-affinity
    ##
    affinity: {}

    ## Configure extra options for Redis Slave liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5

    ## Redis slave Resource
    resources:
      requests:
        cpu: 200m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi

    ## Redis slave selectors and tolerations for pod assignment
    # nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
    # tolerations: []

    ## Use an alternate scheduler, e.g. "stork".
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    # schedulerName:

    ## Redis slave pod Annotation and Labels
    # podLabels: {}
    # podAnnotations: {}

    ## Redis slave pod Security Context
    # securityContext:
    #   enabled: true
    #   fsGroup: 1001
    #   runAsUser: 1001

  ## Prometheus Exporter / Metrics
  ##
  metrics:
    enabled: false

    image:
      registry: docker.io
      repository: oliver006/redis_exporter
      tag: v0.20.2
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ##
      # pullSecrets:
      #   - myRegistrKeySecretName

    service:
      type: ClusterIP
      ## Use serviceLoadBalancerIP to request a specific static IP,
      ## otherwise leave blank
      # loadBalancerIP:
      annotations: {}
      # prometheus.io/scrape: "true"
      # prometheus.io/port: "9121"

    ## Metrics exporter resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    # resources: {}

    ## Extra arguments for Metrics exporter, for example:
    ## extraArgs:
    ##   check-keys: myKey,myOtherKey
    # extraArgs: {}

    ## Metrics exporter labels and tolerations for pod assignment
    # nodeSelector: {"beta.kubernetes.io/arch": "amd64"}
    # tolerations: []

    ## Metrics exporter pod Annotation and Labels
    # podAnnotations: {}
    # podLabels: {}

  ##
  ## Init containers parameters:
  ## volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
  ##

  volumePermissions:
    image:
      registry: docker.io
      repository: busybox
      tag: latest
      pullPolicy: IfNotPresent

  ## Redis config file
  ##
  configmap: |-
  #  Redis configuration file
