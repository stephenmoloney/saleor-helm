{{- if (not .Values.saleor.django.alternativeSettingsConfigMap) }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "saleor.fullname" . }}-custom-settings
  namespace: {{ .Release.Namespace }}
data:
  custom-settings.py: |
    from saleor.settings import *

{{- if eq (len .Values.saleor.django.admins) 0 }}
    ADMINS = ()
{{- else }}
    ADMINS = (
    {{- range .Values.saleor.django.admins }}
        ('{{ .name }}', '{{ .email }}'),
    {{- end }}
    )
{{- end }}
    MANAGERS = ADMINS

    INTERNAL_IPS = get_list(
        os.environ.get('INTERNAL_IPS', '127.0.0.1'))

    TIME_ZONE = os.environ.get('TIME_ZONE', 'UTC')
    LANGUAGE_CODE = os.environ.get('LANGUAGE_CODE', 'en')
    USE_I18N = get_bool_from_env('USE_I18N', True)
    USE_L10N = get_bool_from_env('USE_L10N', True)
    USE_TZ = get_bool_from_env('USE_TZ', True)
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'root': {
            'level': '{{ .Values.saleor.django.levels.rootLogs }}',
            'handlers': ['console']},
        'formatters': {
            'verbose': {
                'format': (
                    '%(levelname)s %(name)s %(message)s'
                    ' [PID:%(process)d:%(threadName)s]')},
            'simple': {
                'format': '%(levelname)s %(message)s'}},
        'filters': {
            'require_debug_false': {
                '()': 'django.utils.log.RequireDebugFalse'}},
        'handlers': {
            'mail_admins': {
                'level': '{{ .Values.saleor.django.levels.mailAdminsHandler }}',
                'filters': ['require_debug_false'],
                'class': 'django.utils.log.AdminEmailHandler'},
            'console': {
                'level': '{{ .Values.saleor.django.levels.consoleHandler }}',
                'class': 'logging.StreamHandler',
                'formatter': 'verbose'}},
        'loggers': {
            'django': {
                'handlers': ['console', 'mail_admins'],
                'level': '{{ .Values.saleor.django.levels.djangoLogs }}',
                'propagate': True},
            'django.server': {
                'handlers': ['console'],
                'level': '{{ .Values.saleor.django.levels.djangoServerLogs }}',
                'propagate': True},
            'saleor': {
                'handlers': ['console'],
                'level': '{{ .Values.saleor.django.levels.saleorLogs }}',
                'propagate': True}}}
    if "AVAILABLE_CURRENCIES" in os.environ:
        AVAILABLE_CURRENCIES = get_list(os.environ.get('AVAILABLE_CURRENCIES'))
    else:
        AVAILABLE_CURRENCIES = [os.environ.get('DEFAULT_CURRENCY', 'USD')]
    LOGIN_REDIRECT_URL = os.environ.get('LOGIN_REDIRECT_URL', 'home')
    LOW_STOCK_THRESHOLD = int(os.environ.get('LOW_STOCK_THRESHOLD', 10))
    PAGINATE_BY = int(os.environ.get('PAGINATE_BY', 16))
    DASHBOARD_PAGINATE_BY = int(os.environ.get('DASHBOARD_PAGINATE_BY', 30))
    DASHBOARD_SEARCH_LIMIT = int(os.environ.get('DASHBOARD_SEARCH_LIMIT', 5))
    DEFAULT_PLACEHOLDER = PLACEHOLDER_IMAGES[255]
    LOGOUT_ON_PASSWORD_CHANGE = get_bool_from_env('LOGOUT_ON_PASSWORD_CHANGE', False)
    DB_SEARCH_ENABLED = get_bool_from_env('DB_SEARCH_ENABLED', True)
    SECURE_SSL_REDIRECT = get_bool_from_env('ENABLE_SSL', False)

    CHECKOUT_PAYMENT_GATEWAYS = {
      {{- if eq .Values.saleor.django.payments.dummy.enabled true }}
        DUMMY: pgettext_lazy('Dummy', 'Dummy gateway'),
      {{- end }}
      {{- if eq .Values.saleor.django.payments.braintree.enabled true }}
        BRAINTREE: pgettext_lazy('Braintree', 'Braintree'),
      {{- end }}
      {{- if eq .Values.saleor.django.payments.razorpay.enabled true }}
        RAZORPAY: pgettext_lazy('Razorpay', 'Razorpay'),
      {{- end }}
      {{- if eq .Values.saleor.django.payments.stripe.enabled true }}
        STRIPE: pgettext_lazy('Stripe', 'Stripe')
      {{- end }}
    }

    GRAPHENE = {
        'RELAY_CONNECTION_ENFORCE_FIRST_OR_LAST': True,
        'RELAY_CONNECTION_MAX_LIMIT': 100
    }
{{- end -}}
