{{- $topLevelScope := . }}
1. Get the saleor application URL as follows:

{{- if .Values.saleor.ingress.enabled }}
{{- range .Values.saleor.ingress.hosts }}

  http{{ if $.Values.saleor.ingress.tls }}s{{ end }}://{{ . }}{{ $.Values.saleor.ingress.path }}
{{- end }}
{{- else if contains "NodePort" .Values.saleor.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "saleor.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://${NODE_IP}:${NODE_PORT}
{{- else if contains "LoadBalancer" .Values.saleor.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w {{ template "saleor.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "saleor.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://${SERVICE_IP}:{{ .Values.saleor.service.port }}
{{- else if contains "ClusterIP" .Values.saleor.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "saleor.name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward ${POD_NAME} 8080:80
{{- end }}


2. Get the pre-populated saleor users email and passwords as follows:

{{- if and (eq .Values.saleor.jobs.init.createUsers.enabled true) (gt (len .Values.saleor.jobs.init.createUsers.users) 0) }}
{{- range $user := .Values.saleor.jobs.init.createUsers.users }}

  User: {{ $user.email }}
  {{- if and (eq $user.isSuperuser true) (eq $user.isStaff true) }}
  Type: Superuser/Staff
  {{- else if eq $user.isSuperuser true }}
  Type: Superuser
  {{- else if eq $user.isStaff true }}
  Type: Staff
  {{- else }}
  Type: Standard
  {{- end }}
  The user password can be obtained by running:
    {{- $key := cat (splitList "." ($user.email | lower | snakecase | replace "@" "-" | replace "_" "-") | first) "pass" | replace " " "-" }}
    {{- if not $topLevelScope.Values.saleor.existingSecret }}
    kubectl get secret --namespace {{ $topLevelScope.Release.Namespace }} {{ template "saleor.fullname" $topLevelScope }} -o jsonpath="{{ (cat "{.data." $key "}") | replace " " "" }}" | base64 --decode
    {{- else }}
    kubectl get secret --namespace {{ $topLevelScope.Release.Namespace }} {{ $topLevelScope.Values.saleor.existingSecret }} -o jsonpath="{{ (cat "{.data." $key "}") | replace " " "" }}" | base64 --decode
    {{- end }}
{{- end }}
{{- else }}
 echo "There are no pre-populated users"
{{- end }}
